// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/go-jobs/actor (interfaces: Statistics)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Statistics is a mock of Statistics interface
type Statistics struct {
	ctrl     *gomock.Controller
	recorder *StatisticsMockRecorder
}

// StatisticsMockRecorder is the mock recorder for Statistics
type StatisticsMockRecorder struct {
	mock *Statistics
}

// NewStatistics creates a new mock instance
func NewStatistics(ctrl *gomock.Controller) *Statistics {
	mock := &Statistics{ctrl: ctrl}
	mock.recorder = &StatisticsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Statistics) EXPECT() *StatisticsMockRecorder {
	return m.recorder
}

// Cancel mocks base method
func (m *Statistics) Cancel(arg0, arg1 map[string]string) error {
	ret := m.ctrl.Call(m, "Cancel", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Cancel indicates an expected call of Cancel
func (mr *StatisticsMockRecorder) Cancel(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Cancel", reflect.TypeOf((*Statistics)(nil).Cancel), arg0, arg1)
}

// Finish mocks base method
func (m *Statistics) Finish(arg0, arg1 map[string]string) {
	m.ctrl.Call(m, "Finish", arg0, arg1)
}

// Finish indicates an expected call of Finish
func (mr *StatisticsMockRecorder) Finish(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Finish", reflect.TypeOf((*Statistics)(nil).Finish), arg0, arg1)
}

// Start mocks base method
func (m *Statistics) Start() error {
	ret := m.ctrl.Call(m, "Start")
	ret0, _ := ret[0].(error)
	return ret0
}

// Start indicates an expected call of Start
func (mr *StatisticsMockRecorder) Start() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*Statistics)(nil).Start))
}

// Update mocks base method
func (m *Statistics) Update(arg0 map[string]string) error {
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update
func (mr *StatisticsMockRecorder) Update(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*Statistics)(nil).Update), arg0)
}
